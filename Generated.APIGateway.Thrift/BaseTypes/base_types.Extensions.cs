/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;


#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE1006  // parts of the code use IDL spelling

namespace APIGateway.Thrift.Generated.BaseTypes
{
  public static class base_typesExtensions
  {
    public static bool Equals(this List<global::APIGateway.Thrift.Generated.BaseTypes.Result> instance, object that)
    {
      if (!(that is List<global::APIGateway.Thrift.Generated.BaseTypes.Result> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::APIGateway.Thrift.Generated.BaseTypes.Result> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::APIGateway.Thrift.Generated.BaseTypes.Result> DeepCopy(this List<global::APIGateway.Thrift.Generated.BaseTypes.Result> source)
    {
      if (source == null)
        return null;

      var tmp12 = new List<global::APIGateway.Thrift.Generated.BaseTypes.Result>(source.Count);
      foreach (var elem in source)
        tmp12.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp12;
    }


  }
}
